{
  "swagger": "2.0",
  "info": {
    "title": "microservice.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Microservice"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/admin/grant/business": {
      "post": {
        "summary": "admin",
        "operationId": "Microservice_GrantBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BusinessGrantRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business": {
      "get": {
        "operationId": "Microservice_GetBusinessByUserId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/create": {
      "post": {
        "summary": "business",
        "operationId": "Microservice_CreateBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateBusinessRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/delete": {
      "post": {
        "operationId": "Microservice_DeleteBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteBusinessRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/email/{email}": {
      "get": {
        "operationId": "Microservice_GetBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/license/new": {
      "post": {
        "summary": "generate license key",
        "operationId": "Microservice_GenerateNewAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1NewLicenseRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/license/{email}": {
      "get": {
        "summary": "get license key",
        "operationId": "Microservice_GetApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/subscription/cancel": {
      "post": {
        "operationId": "Microservice_CancelSubscription",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CancelSubscriptionRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/subscription/create": {
      "post": {
        "operationId": "Microservice_CreateSubscription",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSubscriptionRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/subscription/create-checkout-session": {
      "post": {
        "operationId": "Microservice_CreateCheckoutSessionId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCheckoutSessionIdRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/subscription/plans": {
      "get": {
        "operationId": "Microservice_GetSubscriptionPlans",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/subscription/sessionId": {
      "post": {
        "operationId": "Microservice_CheckSessionID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckSessionIDRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/subscription/update": {
      "post": {
        "operationId": "Microservice_UpdateSubscription",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateSubscriptionRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/subscription/verify/{email}": {
      "get": {
        "operationId": "Microservice_VerifySubscriptionStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/business/wallet/{pubAddr}": {
      "get": {
        "operationId": "Microservice_GetBusinessByPubAddr",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pubAddr",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/logout": {
      "post": {
        "operationId": "Microservice_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/ownership/{walletAddress}": {
      "get": {
        "operationId": "Microservice_GetOwnership",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/product/add": {
      "post": {
        "summary": "product manage",
        "operationId": "Microservice_AddProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddProductRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/product/addlist": {
      "post": {
        "operationId": "Microservice_AddProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddProductsRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/product/list/search": {
      "post": {
        "operationId": "Microservice_SearchProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SearchProductsRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/product/list/{net}/{page}/{perPage}": {
      "get": {
        "operationId": "Microservice_GetProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "net",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "perPage",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/product/list/{net}/{walletAddress}/{page}/{perPage}": {
      "get": {
        "operationId": "Microservice_GetOwnedProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "net",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "walletAddress",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "perPage",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/product/verify/{chainId}/{net}/{assetId}": {
      "get": {
        "operationId": "Microservice_VerifyProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "chainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "net",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/signin": {
      "post": {
        "summary": "user manage",
        "operationId": "Microservice_SignIn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SignInRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/sso/phone": {
      "post": {
        "operationId": "Microservice_SignInWithPhone",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PhoneAuthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PhoneAuthRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/user": {
      "put": {
        "operationId": "Microservice_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/user/create": {
      "post": {
        "operationId": "Microservice_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/user/delete": {
      "delete": {
        "operationId": "Microservice_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteUserRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/user/{walletAddress}": {
      "get": {
        "operationId": "Microservice_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/wallet/create": {
      "post": {
        "summary": "algorand service",
        "operationId": "Microservice_CreateWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateWalletRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/wallet/delete": {
      "post": {
        "operationId": "Microservice_DeleteOwnify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteOwnifyRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/wallet/mint": {
      "post": {
        "operationId": "Microservice_MintOwnify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MintOwnifyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MintOwnifyRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/wallet/mint/file": {
      "post": {
        "operationId": "Microservice_MintOwnifyWithCSV",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MintOwnifyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MintOwnifyRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/wallet/myaccounts": {
      "post": {
        "operationId": "Microservice_GetMyAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SignInRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/wallet/rawtx": {
      "post": {
        "operationId": "Microservice_MakeTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MakeTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MakeTransactionRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/wallet/register": {
      "post": {
        "operationId": "Microservice_RegisterWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterWalletRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/wallet/send": {
      "post": {
        "operationId": "Microservice_SendOwnify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendOwnifyRequest"
            }
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    },
    "/v1/wallet/{email}/accounts": {
      "get": {
        "operationId": "Microservice_GetAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NetWorkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Microservice"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddProductRequest": {
      "type": "object",
      "properties": {
        "chainId": {
          "type": "string",
          "format": "int64"
        },
        "assetId": {
          "type": "string",
          "format": "int64"
        },
        "owner": {
          "type": "string"
        },
        "barcode": {
          "type": "string"
        },
        "itemName": {
          "type": "string"
        },
        "brandName": {
          "type": "string"
        },
        "additionalData": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "issuedDate": {
          "type": "string",
          "format": "int64"
        },
        "net": {
          "type": "string"
        }
      }
    },
    "v1AddProductsRequest": {
      "type": "object",
      "properties": {
        "chainId": {
          "type": "string",
          "format": "int64"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Product"
          }
        },
        "tx": {
          "type": "string",
          "format": "byte"
        },
        "net": {
          "type": "string"
        }
      }
    },
    "v1BusinessGrantRequest": {
      "type": "object",
      "properties": {
        "myEmail": {
          "type": "string"
        },
        "businessEmail": {
          "type": "string"
        },
        "isApproved": {
          "type": "boolean"
        }
      }
    },
    "v1CancelSubscriptionRequest": {
      "type": "object",
      "properties": {
        "subscriptionID": {
          "type": "string"
        }
      }
    },
    "v1CheckSessionIDRequest": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        }
      }
    },
    "v1CreateBusinessRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "business": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      },
      "title": "business"
    },
    "v1CreateCheckoutSessionIdRequest": {
      "type": "object",
      "properties": {
        "priceId": {
          "type": "string"
        }
      }
    },
    "v1CreateSubscriptionRequest": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string"
        },
        "priceId": {
          "type": "string"
        }
      },
      "title": "subscription messages"
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "birthDay": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "idFingerprint": {
          "type": "string"
        },
        "walletAddress": {
          "type": "string"
        }
      }
    },
    "v1CreateWalletRequest": {
      "type": "object",
      "properties": {
        "chainId": {
          "type": "integer",
          "format": "int32"
        },
        "userRole": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "wallet"
    },
    "v1DeleteBusinessRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "v1DeleteOwnifyRequest": {
      "type": "object",
      "properties": {
        "chainId": {
          "type": "integer",
          "format": "int32"
        },
        "owner": {
          "type": "string"
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        },
        "net": {
          "type": "string"
        }
      }
    },
    "v1DeleteUserRequest": {
      "type": "object",
      "properties": {
        "walletAddress": {
          "type": "string"
        }
      }
    },
    "v1FilterOptions": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "barcode": {
          "type": "string"
        },
        "assetId": {
          "type": "string",
          "format": "int64"
        },
        "itemName": {
          "type": "string"
        },
        "brandName": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "issuedDate": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetAccountResponse": {
      "type": "object",
      "properties": {
        "pubKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1MakeTransactionRequest": {
      "type": "object",
      "properties": {
        "chainId": {
          "type": "string"
        },
        "rawTx": {
          "type": "string",
          "format": "byte"
        },
        "net": {
          "type": "string"
        }
      }
    },
    "v1MakeTransactionResponse": {
      "type": "object",
      "properties": {
        "txId": {
          "type": "string"
        },
        "assetId": {
          "type": "string"
        }
      }
    },
    "v1MintOwnifyRequest": {
      "type": "object",
      "properties": {
        "chainId": {
          "type": "string",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "pubKey": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Product"
          }
        },
        "net": {
          "type": "string"
        }
      }
    },
    "v1MintOwnifyResponse": {
      "type": "object",
      "properties": {
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      }
    },
    "v1NetWorkResponse": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "data": {
          "type": "object"
        }
      }
    },
    "v1NewLicenseRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "v1PhoneAuthRequest": {
      "type": "object",
      "properties": {
        "chainId": {
          "type": "integer",
          "format": "int32"
        },
        "wallet": {
          "type": "string"
        },
        "pincode": {
          "type": "string"
        },
        "walletType": {
          "type": "string"
        }
      }
    },
    "v1PhoneAuthResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "v1Product": {
      "type": "object",
      "properties": {
        "chainId": {
          "type": "string",
          "format": "int64"
        },
        "assetId": {
          "type": "string",
          "format": "int64"
        },
        "barcode": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "itemName": {
          "type": "string"
        },
        "brandName": {
          "type": "string"
        },
        "additionalData": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "issuedDate": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1RegisterWalletRequest": {
      "type": "object",
      "properties": {
        "chainId": {
          "type": "integer",
          "format": "int32"
        },
        "walletAddress": {
          "type": "string"
        },
        "sig": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1SearchProductsRequest": {
      "type": "object",
      "properties": {
        "net": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/v1FilterOptions"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "perPage": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1SendOwnifyRequest": {
      "type": "object",
      "properties": {
        "chainId": {
          "type": "integer",
          "format": "int32"
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        },
        "sender": {
          "type": "string"
        },
        "receiver": {
          "type": "string"
        },
        "net": {
          "type": "string"
        }
      }
    },
    "v1SignInRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1UpdateSubscriptionRequest": {
      "type": "object",
      "properties": {
        "oldPriceId": {
          "type": "string"
        },
        "newPriceId": {
          "type": "string"
        }
      }
    },
    "v1UpdateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      }
    },
    "v1UpdateUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      }
    }
  }
}
