syntax = "proto3";

package ownify_api.v1;

option go_package = "/pkg";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

service Microservice {

  //user manage
  rpc SignIn (SignInRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/signin"
      body: "*"
    };
  }
  rpc SignInWithPhone(PhoneAuthRequest)returns (PhoneAuthResponse) {
    option (google.api.http) = {
      post: "/sso/phone"
      body: "*"
    };
  }
  rpc SignUp (SignUpRequest) returns (SignUpResponse) {
    option (google.api.http) = {
      post: "/signup"
      body: "*"
    };
  }
  rpc Logout (google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/logout"
      body: "*"
    };
  }
  rpc GetUser (GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/user"
    };
  }
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      put: "/user"
      body: "*"
    };
  }
  rpc DeleteUser (DeleteUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/user"
    };
  }
  
  //product manage
  rpc AddProduct(AddProductRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/product/add"
    };
  }

  rpc VerifyAsset(VerifyAssetRequest) returns(google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/product/add"
    };
  }
}


message SignInRequest {
  string email = 1 [(validate.rules).string.email = true];
  string password = 2  [(validate.rules).string = {min_len: 8, max_len: 20}];
}

message PhoneAuthRequest {
  int32  chainId = 1 [(validate.rules).int32 = {gt: 4}];
  string wallet = 2 [(validate.rules).string = {min_len: 42, max_len: 58}];
  string pincode = 3  [(validate.rules).string = {min_len: 4, max_len: 6}];
  string walletType = 4 [(validate.rules).string = {in: ["Business","Person"]}];
}

message PhoneAuthResponse {
  int64  userId = 1 [(validate.rules).int64 = {gt: 0}];
  string token = 2;
}


message GetUserRequest {
  int64 id = 1;
}

message GetUserResponse {
  int64 id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  string phone_number = 5;
  string role = 6;
  bool verified = 7;
  int64 balance = 8;
}



message SignUpRequest {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4  [(validate.rules).string = {min_len: 8, max_len: 20}];
  string phone_number = 5;
  string role = 6;
}

message SignUpResponse {
  int64 id = 1;
}

message DeleteUserRequest {
  int64 id = 1;
}

message UpdateUserRequest {
  int64  id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  string phone_number = 5;
}

message UpdateUserResponse {
  int64  id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  string phone_number = 5;
}

message AddProductRequest {
  int64 chain_id = 1;
  int64 asset_id = 2;
  string owner = 3;
  string barcode = 4;
  string item_name = 5;
  string brand_name = 6;
  string additional_data = 7;
  string location = 8;
  int32  issue_date = 9;
  string  net = 10  [(validate.rules).string = {in: ["main","test"]}];
}

message VerifyAssetRequest {
  string asset_id = 1;
}
